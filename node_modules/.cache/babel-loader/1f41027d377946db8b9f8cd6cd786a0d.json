{"ast":null,"code":"var _jsxFileName = \"/home/meowz/node-api/front/front/src/pages/main/index.js\";\nimport React, { Component } from 'react';\nimport api from \"../../services/api\";\nimport firebase from 'firebase';\nvar firebaseConfig = {\n  apiKey: \"AIzaSyDXSnHJv13AuR--Yfps6_lbcfgLS9GtdRc\",\n  authDomain: \"testeesp32-48ea2.firebaseapp.com\",\n  databaseURL: \"https://testeesp32-48ea2.firebaseio.com\",\n  projectId: \"testeesp32-48ea2\",\n  storageBucket: \"testeesp32-48ea2.appspot.com\",\n  messagingSenderId: \"147816304505\",\n  appId: \"1:147816304505:web:6acf1830b58b49f68029a8\",\n  measurementId: \"G-WGFS4VKZYY\"\n};\nfirebase.initializeApp(firebaseConfig);\nvar TWEETSREF = firebase.database().ref();\nexport default class Main extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      umid: [],\n      temp: [],\n      date: []\n    };\n\n    this.loadData = async () => {\n      const response = await api.get('/api/data');\n      console.log(response);\n      this.setState({\n        umid: response.data.umidade\n      });\n      this.setState({\n        temp: response.data.temperature\n      });\n      this.setState({\n        date: response.data.dateRegister\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.loadData();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"dataList\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, this.state.umid), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, this.state.temp), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, this.state.date));\n  }\n\n}\n\nclass Apps extends Component {\n  componentWillMount() {\n    TWEETSREF.on(\"value\", snapshot => {\n      console.log(snapshot.val());\n    });\n  }\n\n}","map":{"version":3,"sources":["/home/meowz/node-api/front/front/src/pages/main/index.js"],"names":["React","Component","api","firebase","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","TWEETSREF","database","ref","Main","state","umid","temp","date","loadData","response","get","console","log","setState","data","umidade","temperature","dateRegister","componentDidMount","render","Apps","componentWillMount","on","snapshot","val"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,GAAP,MAAgB,oBAAhB;AAEA,OAAOC,QAAP,MAAqB,UAArB;AAEA,IAAIC,cAAc,GAAG;AACnBC,EAAAA,MAAM,EAAE,yCADW;AAEnBC,EAAAA,UAAU,EAAE,kCAFO;AAGnBC,EAAAA,WAAW,EAAE,yCAHM;AAInBC,EAAAA,SAAS,EAAE,kBAJQ;AAKnBC,EAAAA,aAAa,EAAE,8BALI;AAMnBC,EAAAA,iBAAiB,EAAE,cANA;AAOnBC,EAAAA,KAAK,EAAE,2CAPY;AAQnBC,EAAAA,aAAa,EAAE;AARI,CAArB;AAWAT,QAAQ,CAACU,aAAT,CAAuBT,cAAvB;AAGA,IAAIU,SAAS,GAAGX,QAAQ,CAACY,QAAT,GAAoBC,GAApB,EAAhB;AAEA,eAAe,MAAMC,IAAN,SAAmBhB,SAAnB,CAA4B;AAAA;AAAA;AAAA,SACvCiB,KADuC,GAC/B;AACJC,MAAAA,IAAI,EAAC,EADD;AAEJC,MAAAA,IAAI,EAAC,EAFD;AAGJC,MAAAA,IAAI,EAAC;AAHD,KAD+B;;AAAA,SASvCC,QATuC,GAS5B,YAAW;AAClB,YAAMC,QAAQ,GAAG,MAAMrB,GAAG,CAACsB,GAAJ,CAAQ,WAAR,CAAvB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACA,WAAKI,QAAL,CAAc;AAACR,QAAAA,IAAI,EAAEI,QAAQ,CAACK,IAAT,CAAcC;AAArB,OAAd;AACA,WAAKF,QAAL,CAAc;AAACP,QAAAA,IAAI,EAAEG,QAAQ,CAACK,IAAT,CAAcE;AAArB,OAAd;AACA,WAAKH,QAAL,CAAc;AAACN,QAAAA,IAAI,EAAEE,QAAQ,CAACK,IAAT,CAAcG;AAArB,OAAd;AACH,KAfsC;AAAA;;AAMvCC,EAAAA,iBAAiB,GAAE;AACf,SAAKV,QAAL;AACH;;AASDW,EAAAA,MAAM,GAAE;AACJ,WACA;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKf,KAAL,CAAWC,IAAhB,CADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKD,KAAL,CAAWE,IAAhB,CAFA,EAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKF,KAAL,CAAWG,IAAhB,CAHA,CADA;AAOH;;AAzBsC;;AA4B3C,MAAMa,IAAN,SAAmBjC,SAAnB,CAA4B;AACxBkC,EAAAA,kBAAkB,GAAE;AAClBrB,IAAAA,SAAS,CAACsB,EAAV,CAAa,OAAb,EAAuBC,QAAD,IAAa;AACjCZ,MAAAA,OAAO,CAACC,GAAR,CAAYW,QAAQ,CAACC,GAAT,EAAZ;AACD,KAFD;AAGD;;AALuB","sourcesContent":["import React, { Component } from 'react';\nimport api from \"../../services/api\";\n\nimport firebase from 'firebase';\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyDXSnHJv13AuR--Yfps6_lbcfgLS9GtdRc\",\n  authDomain: \"testeesp32-48ea2.firebaseapp.com\",\n  databaseURL: \"https://testeesp32-48ea2.firebaseio.com\",\n  projectId: \"testeesp32-48ea2\",\n  storageBucket: \"testeesp32-48ea2.appspot.com\",\n  messagingSenderId: \"147816304505\",\n  appId: \"1:147816304505:web:6acf1830b58b49f68029a8\",\n  measurementId: \"G-WGFS4VKZYY\"\n};\n\nfirebase.initializeApp(firebaseConfig);\n\n\nvar TWEETSREF = firebase.database().ref();\n\nexport default class Main extends Component{\n    state = {\n        umid:[], \n        temp:[],\n        date:[]\n    };\n    componentDidMount(){\n        this.loadData();\n    }\n    loadData = async() => {\n        const response = await api.get('/api/data');\n        console.log(response);\n        this.setState({umid: response.data.umidade});\n        this.setState({temp: response.data.temperature});\n        this.setState({date: response.data.dateRegister})\n    };\n    \n    render(){\n        return (\n        <div className=\"dataList\">\n        <h1>{this.state.umid}</h1>\n        <h1>{this.state.temp}</h1>\n        <h1>{this.state.date}</h1>\n        </div>\n        )\n    }\n}\n\nclass Apps extends Component{\n    componentWillMount(){\n      TWEETSREF.on(\"value\", (snapshot)=> {\n        console.log(snapshot.val());\n      })\n    }\n  \n  }"]},"metadata":{},"sourceType":"module"}